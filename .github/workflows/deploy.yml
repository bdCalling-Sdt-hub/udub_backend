name: Deploy Node.js with TypeScript on EC2

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3 # Checkout the repository code
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Install Dependencies
        run: npm ci --ignore-scripts
      - name: Install TypeScript Compiler
        run: npm install -g typescript # Install TypeScript globally
      - name: Build Project
        run: npm run build # Run tsc to compile the TypeScript code
      - name: Prepare Deployment Files
        run: |
          # Archive necessary files into a tarball
          tar -czf app.tar.gz dist package.json package-lock.json ecosystem.config.js .env

  deploy:
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job

    steps:
      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
          # Set up SSH keys for accessing EC2
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          ENV_VARS_JSON: ${{ secrets.ENV_VARS_JSON }}
        run: |
          # Copy files to EC2
          scp app.tar.gz $EC2_USER@$EC2_HOST:/home/application/backend/app.tar.gz

          # SSH into EC2 and perform deployment
          ssh $EC2_USER@$EC2_HOST << 'EOF'
            # Unarchive the app.tar.gz file and deploy the app
            rm -rf /home/application/backend && mkdir -p /home/application/backend
            tar -xzf /home/application/backend/app.tar.gz -C /home/application/backend
            cd /home/application/backend

            # Decode and set environment variables from the GitHub Secrets
            echo "$ENV_VARS_JSON" | jq -r 'to_entries | .[] | "export \(.key)=\(.value)"' >> .env

            # Install production dependencies
            npm ci --only=production

            # Start or restart the application using PM2
            pm2 delete nodejs-backend || true
            pm2 start dist/server.js --name nodejs-backend
          EOF
